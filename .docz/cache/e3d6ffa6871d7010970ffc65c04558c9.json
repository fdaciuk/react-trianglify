{"remainingRequest":"/media/storage/code/00-opensource/react-trianglify/node_modules/thread-loader/dist/cjs.js??ref--5-1!/media/storage/code/00-opensource/react-trianglify/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/media/storage/code/00-opensource/react-trianglify/node_modules/source-map-loader/index.js!/media/storage/code/00-opensource/react-trianglify/src/index.js","dependencies":[{"path":"/media/storage/code/00-opensource/react-trianglify/src/index.js","mtime":1492138872908},{"path":"/media/storage/code/00-opensource/react-trianglify/node_modules/cache-loader/dist/cjs.js","mtime":1572291315213},{"path":"/media/storage/code/00-opensource/react-trianglify/node_modules/thread-loader/dist/cjs.js","mtime":1572291315500},{"path":"/media/storage/code/00-opensource/react-trianglify/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1570716453026},{"path":"/media/storage/code/00-opensource/react-trianglify/node_modules/source-map-loader/index.js","mtime":1572291315526}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/media/storage/code/00-opensource/react-trianglify/src/index.js"],"names":["React","Component","PropTypes","trianglify","extractProps","Trianglify","state","pattern","generatePattern","props","nextProps","outputMethod","setState","innerHTML","output","canvas","method","component","canvasRef","height","width","svg","__html","png","outputTypes","node","getProps","defaultProps","propTypes"],"mappings":"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","sourcesContent":["'use strict'\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport trianglify from 'trianglify'\nimport { extractProps } from './props'\n\nclass Trianglify extends Component {\n  constructor () {\n    super()\n    this.state = { pattern: null }\n  }\n\n  componentDidMount () {\n    this.generatePattern(this.props)\n  }\n\n  componentWillReceiveProps (nextProps) {\n    this.generatePattern(nextProps)\n  }\n\n  generatePng (outputMethod) {\n    this.setState({ pattern: outputMethod() })\n  }\n\n  generateSvg (outputMethod) {\n    this.setState({ pattern: outputMethod().innerHTML })\n  }\n\n  generateCanvas (outputMethod) {\n    outputMethod(this.trianglify)\n  }\n\n  outputTypes (output) {\n    return {\n      canvas: {\n        method: 'generateCanvas',\n        component: ({ canvasRef, height, width }) => (\n          <canvas ref={canvasRef} height={height} width={width} />\n        )\n      },\n\n      svg: {\n        method: 'generateSvg',\n        component: ({ pattern, height, width }) => (\n          <svg dangerouslySetInnerHTML={{ __html: pattern }} height={height} width={width} />\n        )\n      },\n\n      png: {\n        method: 'generatePng',\n        component: ({ pattern, height, width }) => (\n          <img src={pattern} height={height} width={width} />\n        )\n      }\n    }[output]\n  }\n\n  generatePattern ({ output, ...props }) {\n    const pattern = trianglify(props)\n    const outputMethod = pattern[output]\n\n    this[this.outputTypes(output).method](outputMethod)\n  }\n\n  render () {\n    const { output, width, height } = this.props\n\n    return this.outputTypes(output).component({\n      height,\n      width,\n      pattern: this.state.pattern,\n      canvasRef: (node) => (this.trianglify = node)\n    })\n  }\n}\n\nconst getProps = extractProps(PropTypes)\n\nTrianglify.defaultProps = getProps('defaultValue')\nTrianglify.propTypes = getProps('type')\n\nexport default Trianglify\n"]}]}